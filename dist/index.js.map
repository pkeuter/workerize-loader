{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import path from 'path';\nimport loaderUtils from 'loader-utils';\n\nimport NodeTargetPlugin from 'webpack/lib/node/NodeTargetPlugin';\nimport SingleEntryPlugin from 'webpack/lib/SingleEntryPlugin';\nimport WebWorkerTemplatePlugin from 'webpack/lib/webworker/WebWorkerTemplatePlugin';\n\nexport default function loader() {}\n\nconst CACHE = {};\n\nloader.pitch = function(request) {\n\tthis.cacheable(false);\n\n\tconst options = loaderUtils.getOptions(this) || {};\n\n\tconst cb = this.async();\n\n\tconst filename = loaderUtils.interpolateName(this, `${options.name || '[hash]'}.worker.js`, {\n\t\tcontext: options.context || this.rootContext || this.options.context,\n\t\tregExp: options.regExp\n\t});\n\n\tconst worker = {};\n\n\tworker.options = {\n\t\tfilename,\n\t\tchunkFilename: `[id].${filename}`,\n\t\tnamedChunkFilename: null\n\t};\n\n\tworker.compiler = this._compilation.createChildCompiler('worker', worker.options);\n\n\tworker.compiler.apply(new WebWorkerTemplatePlugin(worker.options));\n\n\tif (this.target!=='webworker' && this.target!=='web') {\n\t\tworker.compiler.apply(new NodeTargetPlugin());\n\t}\n\n\tworker.compiler.apply(new SingleEntryPlugin(this.context, `!!${path.resolve(__dirname, 'rpc-worker-loader.js')}!${request}`, 'main'));\n\n\tconst subCache = `subcache ${__dirname} ${request}`;\n\n\tworker.compiler.plugin('compilation', (compilation, data) => {\n\t\tif (compilation.cache) {\n\t\t\tif (!compilation.cache[subCache]) compilation.cache[subCache] = {};\n\n\t\t\tcompilation.cache = compilation.cache[subCache];\n\t\t}\n\n\t\tdata.normalModuleFactory.plugin('parser', (parser, options) => {\n\t\t\tparser.plugin('export declaration', expr => {\n\t\t\t\tlet decl = expr.declaration || expr,\n\t\t\t\t\t{ compilation, current } = parser.state,\n\t\t\t\t\tentry = compilation.entries[0].resource;\n\n\t\t\t\t// only process entry exports\n\t\t\t\tif (current.resource!==entry) return;\n\n\t\t\t\tlet exports = compilation.__workerizeExports || (compilation.__workerizeExports = {});\n\n\t\t\t\tif (decl.id) {\n\t\t\t\t\texports[decl.id.name] = true;\n\t\t\t\t}\n\t\t\t\telse if (decl.declarations) {\n\t\t\t\t\tfor (let i=0; i<decl.declarations.length; i++) {\n\t\t\t\t\t\texports[decl.declarations[i].id.name] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn('[workerize] unknown export declaration: ', expr);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\tworker.compiler.runAsChild((err, entries, compilation) => {\n\t\tif (err) return cb(err);\n\n\t\tif (entries[0]) {\n\t\t\tworker.file = entries[0].files[0];\n\n\t\t\tlet contents = compilation.assets[worker.file].source();\n\t\t\tlet exports = Object.keys(CACHE[worker.file] = compilation.__workerizeExports || CACHE[worker.file] || {});\n\n\t\t\t// console.log('Workerized exports: ', exports.join(', '));\n\n\t\t\tif (options.inline) {\n\t\t\t\tworker.url = `URL.createObjectURL(new Blob([${JSON.stringify(contents)}]))`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tworker.url = `__webpack_public_path__ + ${JSON.stringify(worker.file)}`;\n\t\t\t}\n\n\t\t\tif (options.fallback === false) {\n\t\t\t\tdelete this._compilation.assets[worker.file];\n\t\t\t}\n\n\t\t\treturn cb(null, `\n\t\t\t\tvar addMethods = require(${loaderUtils.stringifyRequest(this, path.resolve(__dirname, 'rpc-wrapper.js'))})\n\t\t\t\tvar methods = ${JSON.stringify(exports)}\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(${worker.url}, { name: ${JSON.stringify(filename)} })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t${ options.ready ? 'w.ready = new Promise(function(r) { w.addEventListener(\"ready\", function(){ r(w) }) })' : '' }\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\treturn cb(null, null);\n\t});\n};\n"],"names":["const","let","this"],"mappings":"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"}